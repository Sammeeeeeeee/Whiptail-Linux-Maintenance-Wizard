#!/bin/bash

SCRIPT_URL="https://github.com/Sammeeeeeeee/Whiptail-Linux-Maintenance-Wizard/raw/main/LinuxMaintinanceTool.sh"
SCRIPT_PATH="/usr/local/bin/lmt.sh"

if [ "$1" == "-remove" ]; then
    if [ -e "$SCRIPT_PATH" ]; then
        sudo rm "$SCRIPT_PATH"
        echo "Removed the script from $SCRIPT_PATH"
    else
        echo "The script is not installed at $SCRIPT_PATH"
    fi

    if [ -n "$SUDO_USER" ]; then
        SHELL_CONFIG="/home/$SUDO_USER/.bashrc"
    elif [ -n "$ZSH_VERSION" ]; then
        SHELL_CONFIG="$HOME/.zshrc"
    elif [ -n "$BASH_VERSION" ]; then
        SHELL_CONFIG="$HOME/.bashrc"
    else
        echo "Unsupported shell. Please remove references manually."
        exit 1
    fi

    if grep -q "lmt.sh" "$SHELL_CONFIG"; then
        sed -i "/lmt.sh/d" "$SHELL_CONFIG"
        echo "Removed references to lmt.sh from $SHELL_CONFIG"
    else
        echo "No references to lmt.sh found in $SHELL_CONFIG"
    fi

    if grep -q "lmt.sh" "$SHELL_CONFIG"; then
        sed -i "/lmt.sh/d" "$SHELL_CONFIG"
        echo "Removed any functions or commands referring to lmt.sh from $SHELL_CONFIG"
    fi

    exit 0
fi

SELECTED_ALIAS=$(whiptail --title "Alias Input" --inputbox "Enter the alias you want to create:" 10 60 "lmt" 3>&1 1>&2 2>&3)
if [ $? -ne 0 ]; then
    echo "User canceled the operation."
    exit 1
fi

if ! command -v whiptail &> /dev/null; then
    echo "Whiptail is required. Would you like to install it now? (y/n)"
    read -r answer

    case "$answer" in
        y|Y)
            if command -v apt-get &> /dev/null; then
                sudo apt-get update
                sudo apt-get install -y whiptail
            elif command -v yum &> /dev/null; then
                sudo yum install -y whiptail
            elif command -v dnf &> /dev/null; then
                sudo dnf install -y whiptail
            elif command -v pacman &> /dev/null; then
                sudo pacman -S --noconfirm whiptail
            else
                echo "Unsupported package manager. Please install whiptail manually and re-run the script."
                exit 1
            fi
            ;;
        n|N)
            echo "Exiting now. To install Whiptail in the future, run the appropriate command for your package manager."
            exit 1
            ;;
        *)
            echo "Invalid input. Please enter 'y' to install or 'n' to exit."
            exit 1
            ;;
    esac
fi

if [ -z "$SELECTED_ALIAS" ]; then
    whiptail --title "Error" --msgbox "Alias cannot be empty. Please run the script again." 8 45
    exit 1
fi

DYNAMIC_LINK=$(whiptail --title "Choose Option" --menu "Select an option:" 12 120 2 \
"Dynamic Link:" "Runs the version fresh off the GitHub repo every time. Unsecure, but always has the latest edition" \
"Download:" "Download the latest version from the GitHub repo. Will not auto-update." 3>&1 1>&2 2>&3)

{
    whiptail --title "Progress" --gauge "Downloading and setting up the script..." 10 60 0 &
    
    if [[ "$DYNAMIC_LINK" == "Dynamic Link:" ]]; then
        echo 'bash -c "$(wget -qLO - https://github.com/Sammeeeeeeee/Whiptail-Linux-Maintenance-Wizard/raw/main/LinuxMaintinanceTool.sh)"' > "$SCRIPT_PATH"
    else
        wget -qO "$SCRIPT_PATH" "$SCRIPT_URL"
        if [ $? -ne 0 ]; then
            whiptail --title "Error" --msgbox "Failed to download the script. Please check your internet connection or the URL." 8 45
            exit 1
        fi
    fi
    
    chmod +x "$SCRIPT_PATH"
    if [ $? -ne 0 ]; then
        whiptail --title "Error" --msgbox "Failed to set executable permissions on the script." 8 45
        exit 1
    fi

    echo 100
} | whiptail --title "Progress" --gauge "Setting up the script..." 10 60 0

if [ -n "$SUDO_USER" ]; then
    SHELL_CONFIG="/home/$SUDO_USER/.bashrc"
elif [ -n "$ZSH_VERSION" ]; then
    SHELL_CONFIG="$HOME/.zshrc"
elif [ -n "$BASH_VERSION" ]; then
    SHELL_CONFIG="$HOME/.bashrc"
else
    whiptail --title "Error" --msgbox "Unsupported shell. Please add the alias manually." 8 45
    exit 1
fi

if grep -q "^alias $SELECTED_ALIAS=" "$SHELL_CONFIG"; then
    whiptail --title "Info" --msgbox "Alias already exists in $SHELL_CONFIG" 8 45
else
    echo "alias $SELECTED_ALIAS='$SCRIPT_PATH'" >> "$SHELL_CONFIG"
    whiptail --title "Success" --msgbox "Alias added to $SHELL_CONFIG" 8 45
fi

whiptail --title "Instructions" --msgbox "To apply the changes, run:\n\nsource $SHELL_CONFIG" 12 45
